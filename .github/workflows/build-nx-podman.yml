name: 'Podman Builder'

on:
  schedule:
    - cron: '0 0 * * 5'
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  fetch-tags:
    runs-on: ubuntu-latest
    outputs:
      node-tags: ${{ steps.node-tags.outputs.tags }}
      node-tags-csv: ${{ steps.node-tags.outputs.tags-csv }}
      nx-podman-tags: ${{ steps.nx-podman-tags.outputs.tags }}
      nx-podman-tags-csv: ${{ steps.nx-podman-tags.outputs.tags-csv }}
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/list-tags
        id: node-tags
        with:
          image: 'node'
          filter: '^(25)\.[0-9]+\.[0-9]+$'
          sort: true

      - uses: ./.github/actions/list-tags
        id: nx-podman-tags
        with:
          image: 'gperdomor/nx-podman'
          filter: '^(25)\.[0-9]+\.[0-9]+$'
          sort: true

  calculate-tag-difference:
    runs-on: ubuntu-latest
    needs: [fetch-tags]
    outputs:
      missing-tags: ${{ steps.difference.outputs.missing-tags }}
      missing-tags-csv: ${{ steps.difference.outputs.missing-tags-csv }}
      missing-count: ${{ steps.difference.outputs.missing-count }}
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/calculate-tag-difference
        id: difference
        with:
          source-tags: ${{ needs.fetch-tags.outputs.node-tags }}
          target-tags: ${{ needs.fetch-tags.outputs.nx-podman-tags }}

  build-podman:
    if: ${{ needs.calculate-tag-difference.outputs.missing-count > 0}}
    runs-on: ubuntu-latest
    needs: calculate-tag-difference
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        NODE_VERSION: '${{ fromJson(needs.calculate-tag-difference.outputs.missing-tags) }}'
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Display build information
        run: |
          echo "Building Node.js version: ${{ matrix.NODE_VERSION }}"
          echo "Push enabled: ${{ github.ref == 'refs/heads/main' }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Extract metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            gperdomor/nx-podman
            ghcr.io/${{ github.repository_owner }}/nx-podman
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}},value=${{ matrix.NODE_VERSION }}
            type=semver,pattern={{major}}.{{minor}},value=${{ matrix.NODE_VERSION }}
            type=semver,pattern={{major}},value=${{ matrix.NODE_VERSION }}
            type=sha,prefix=${{ matrix.NODE_VERSION }}-
          labels: |
            org.opencontainers.image.authors=Gustavo Perdomo <gperdomor@gmail.com>
            org.opencontainers.image.description=Podman builder with Node.js ${{ matrix.NODE_VERSION }} for @nx-tools/nx-container
            org.opencontainers.image.vendor=Gustavo Perdomo
            org.opencontainers.image.version=${{ matrix.NODE_VERSION }}

      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./images/podman
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            NODE_VERSION=${{ matrix.NODE_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true

      - name: Display image digest
        run: echo "Image digest: ${{ steps.docker_build.outputs.digest }}"

      - name: Display all tags
        run: |
          echo "Generated tags:"
          echo "${{ steps.metadata.outputs.tags }}"
