name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NX_BRANCH: ${{ github.event.pull_request.head.ref }}
  NX_RUN_GROUP: ${{ github.run_id }}
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}

jobs:
  initialise:
    runs-on: 'ubuntu-20.04'
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline

  affected-lint:
    runs-on: 'ubuntu-20.04'
    needs: [initialise]
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline
      - name: Run linter üëÄ
        run: npm run nx affected -- --target=lint --base=remotes/origin/main

  affected-build:
    runs-on: 'ubuntu-20.04'
    needs: [initialise]
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline
      - name: Run build üë∑‚Äç‚ôÇÔ∏è
        run: npm run nx affected -- --target=build --with-deps --base=remotes/origin/main

  affected-test:
    runs-on: 'ubuntu-20.04'
    needs: [initialise]
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    env:
      PRISMA_HIDE_UPDATE_MESSAGE: 'true'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline
      - name: Run tests üß™
        run: npm run nx affected -- --target=test --base=remotes/origin/main

  affected-e2e:
    runs-on: 'ubuntu-20.04'
    needs: [initialise]
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    env:
      PRISMA_HIDE_UPDATE_MESSAGE: 'true'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline
      - name: Run e2e tests üß™üß™
        run: npm run nx affected -- --target=e2e --base=remotes/origin/main
